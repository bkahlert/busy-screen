trace = false

name = busy-screen
os = Raspberry Pi OS Lite

timezone = Europe/Berlin

hostname {
  name: busy-screen
  name: busy-${BUSY_SCREEN__USERNAME}
  random-suffix: false
}

wifi {
  wpa-supplicant = ${BUSY_SCREEN__WPA_SUPPLICANT}
  //    auto-reconnect = true
  power-safe-mode = false
}

size = 12 GiB

ssh {
  enabled: true
  port: 3421
  authorized-keys {
    //      files: ["$HOME/.ssh/id_*.pub"]
    keys: [${BUSY_SCREEN__AUTHORIZED_KEY}]
  }
}

default-user {
  newUsername: pi
  newPassword: raspberry
  newUsername: ${BUSY_SCREEN__USERNAME}
  newPassword: ${BUSY_SCREEN__PASSWORD}
}

user = ${default-user.newUsername}
home = /home/${user}
app = ${home}/busy-screen

samba {
  homeShare: true
  rootShare: read-only
}

# TODO currently no DHCP release received; needs manual configuration on host side (192.168.168.162; 255.255.255.240)
usb-gadgets {
  ethernet {
    dhcpRange: 192.168.168.160..192.168.168.174
    deviceAddress: 192.168.168.168
    hostAsDefaultGateway: true
    enableSerialConsole: false
    manufacturer: Björn Kahlert,
    product: Busy Screen of ${user},
  }
}

tweaks {
  apt-retries: 10
}

files = [
  {
    host-path: home
    disk-path: ${home}
  },
  {
    host-path: usr/share/plymouth/themes/busy-screen
    disk-path: /usr/share/plymouth/themes/busy-screen
  },
  {
    append: """
      # reduce flash drive IO
      tmpfs /tmp tmpfs defaults,noatime,nosuid,nodev,noexec,mode=0755,size=100M 0 0
      tmpfs /var/tmp tmpfs defaults,noatime,nosuid,nodev,noexec,mode=0755,size=100M 0 0
      tmpfs /var/log tmpfs defaults,noatime,nosuid,nodev,noexec,mode=0755 0 0
      """,
    disk-path: /etc/fstab
  },
]

setup = [
  {
    name: FIX
    scripts: [
      {
        name: "Create Log Directories"
        content: """
              sed -i 's#^\(\s*exit .*\)#mkdir -p /var/log/apache\n\1#g' /etc/rc.local
              sed -i 's#^\(\s*exit .*\)#mkdir -p /var/log/samba\n\1#g' /etc/rc.local
              """
      }
    ]
  },
  {
    name: UPGRADE
    scripts: [
      {
        name: "Dist Upgrade"
        content: """
              apt-get -o Acquire::Check-Valid-Until=false -o Acquire::Check-Date=false update
              apt-get -yq dist-upgrade
              """
      }
    ]
  },
  {
    name: BASICS
    scripts: [
      {
        name: "Set Keyboard Layout to de"
        content: """
            sed -i 's/XKBLAYOUT=\"\w*"/XKBLAYOUT=\"'de'\"/g' /etc/default/keyboard
            """
      },
      {
        name: "Install Build Tools"
        content: """
            apt-get -qq update
            apt-get -qq install build-essential git
            """
      },
      {
        name: "Install Python 3 PIP"
        content: """
            apt-get -qq install python3-pip
            """
      },
    ]
  },
  {
    name: APP
    scripts: [
      //        {
      //          name: "install Health Checks"
      //          content: """
      //              command -v sch >/dev/null 2>&1 || { apt-get update; pip3 install sch; }
      //              """
      //        },
      //        {
      //          name: "Bluetooth"
      //          content: """
      //              apt-get -qq install bluez-tools
      //              """
      //        },
      {
        name: "Install Avahi"
        content: """
            apt-get -qq install avahi-daemon
            mkdir -p /etc/avahi/services
            """
      },
      {
        name: "Disable User Service Publishing"
        content: """
            sed -i 's/.*disable-user-service-publishing.*/disable-user-service-publishing=yes/g' /etc/avahi/avahi-daemon.conf
            """
      },
      {
        name: "Configure Avahi — DEVICE-INFO"
        content: """
            cat <<EOF >/etc/avahi/services/device-info.service
            <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
            <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
            <service-group>
              <name replace-wildcards="yes">┴┬┴┤´Ｏ´)ﾉ  """${user}"""!?  Σ(‘Д’⁕)</name>
              <service>
                <type>_device-info._tcp</type>
                <port>0</port>
                <txt-record>model=AirPortExtreme5</txt-record>
                <!-- check /System/Library/CoreServices/CoreTypes.bundle/Contents/Info.plist for all possible values -->
              </service>
            </service-group>
            EOF
            """
      },
      {
        name: "Configure Avahi — SSH"
        content: """
            cat <<EOF >/etc/avahi/services/ssh.service
            <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
            <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
            <service-group>
              <name replace-wildcards="yes">Busy Screen of """${user}"""</name>
              <service>
                <type>_ssh._tcp</type>
                <port>"""${ssh.port}"""</port>
                <txt-record>user="""${user}"""</txt-record>
              </service>
            </service-group>
            EOF
            """
      },
      {
        name: "Configure Avahi — SFTP"
        content: """
            cat <<EOF >/etc/avahi/services/sftp.service
            <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
            <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
            <service-group>
              <name replace-wildcards="yes">Busy Screen of """${user}"""</name>
              <service>
                <type>_sftp-ssh._tcp</type>
                <port>"""${ssh.port}"""</port>
                <txt-record>path="""${home}"""</txt-record>
                <txt-record>u="""${user}"""</txt-record>
              </service>
            </service-group>
            EOF
            """
      },
      {
        name: "Configure Avahi — SMB"
        content: """
            cat <<EOF >/etc/avahi/services/smb.service
            <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
            <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
            <service-group>
              <name replace-wildcards="yes">Busy Screen of """${user}"""</name>
              <service>
                <type>_smb._tcp</type>
                <port>445</port>
                <txt-record>path="""${home}"""</txt-record>
                <txt-record>user="""${user}"""</txt-record>
              </service>
            </service-group>
            EOF
            """
      },
      {
        name: "Configure Avahi — Busy Screen"
        content: """
            cat <<EOF >/etc/avahi/services/busy-screen.service
            <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
            <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
            <service-group>
              <name replace-wildcards="yes">Busy Screen of """${user}"""</name>
              <service>
                <type>_http._tcp</type>
                <port>80</port>
                <txt-record>user="""${user}"""</txt-record>
                <txt-record>port=1880</txt-record>
              </service>
            </service-group>
            EOF
            """
      },
      {
        name: "Enable Avahi"
        content: """
            systemctl enable avahi-daemon
            systemctl start avahi-daemon
            """
      },
      {
        name: "Restart Avahi"
        content: """
            systemctl restart --no-block avahi-daemon
            """
      },
      {
        name: "Install Browser"
        content: """
          chmod +x """${app}"""/*.sh
          """${app}"""/browser-install.sh """${user}"""
          """
      },
      {
        name: "Install Busy Screen"
        content: """
            chmod +x """${app}"""/*.sh
            """${app}"""/node-install.sh
            """${app}"""/node-red-install.sh """${user}"""
            """${app}"""/node-red-nodes-install.sh """${user}"""
            """${app}"""/install.sh """${user}"""
            """
      },
      {
        name: "Graphical Boot Screen"
        content: """
        apt-get -qq install plymouth
        sudo plymouth-set-default-theme "busy-screen" -R

        echo 'disable_splash=1' >> /boot/config.txt
        sed -i -e 's/$/ splash quiet plymouth.ignore-serial-consoles logo.nologo vt.global_cursor_default=0/' /boot/cmdline.txt
        """
      },
    ]
  },
]

first-boot = [
  //    {
  //      name: "Tailscale VPN Client"
  //      content: """
  //          apt-get -qq install apt-transport-https
  //          curl -fsSL https://pkgs.tailscale.com/stable/raspbian/buster.gpg | apt-key add -
  //          curl -fsSL https://pkgs.tailscale.com/stable/raspbian/buster.list | tee /etc/apt/sources.list.d/tailscale.list
  //          apt-get update
  //          apt-get -qq install tailscale
  //          touch """${home}"""/README.md
  //          echo 'Tailscale VPN Client' > """${home}"""/README.md
  //          echo '[ ] `tailscale up --authkey """${BUSY_SCREEN__TAILSCALE}""" && ip addr show tailscale0`' > """${home}"""/README.md
  //          echo '[ ] Visit https://login.tailscale.com/admin/authkeys to create a new key if the command fails' > """${home}"""/README.md
  //          """
  //    },
  {
    name: "Use Available Space"
    content: """
        raspi-config --expand-rootfs
        """
  },
  {
    name: "Auto-Login"
    content: """
        cat <<EOF >/etc/systemd/system/getty@tty1.service.d/autologin.conf
        [Service]
        ExecStart=
        ExecStart=-/sbin/agetty --autologin """${user}""" --noclear %I 38400 linux
        EOF
        """
  },
  {
    name: "Reboot"
    content: """
        shutdown -r now
        """
  },
]
