#!/usr/bin/env bash

# Important: If you run into problems, you can always switch to a TTY with
# Ctrl+Alt+F2 (Ctrl+Alt+Fn+F2 on some keyboards)

LOG_FILE=$HOME/.kiosk.log
printf 'LOG STARTED %s\n' "$(date)" >"$LOG_FILE"

tweak_ui() {

    printf "Setting background... "
    xsetroot -solid black && printf '\e[32;1m✔\e[0m\n'
    printf "Disabling screensaver... "
    xset s off && printf '\e[32;1m✔\e[0m\n'

    printf "Disabling DPMS modes standby, suspend, and off modes... "
    xset dpms 0 0 0 && printf '\e[32;1m✔\e[0m\n'

    printf "Disabling DPMS / Energy Star features... "
    xset -dpms && printf '\e[32;1m✔\e[0m\n'

    printf "Disabling screen blanking... "
    xset s noblank && printf '\e[32;1m✔\e[0m\n'

    printf "Moving mouse pointer to top-left corner to not trigger hover styles... "
    xdotool mousemove 0 0 && printf '\e[32;1m✔\e[0m\n'

    printf "Hiding mouse pointer... "
    pgrep -a unclutter >/dev/null || (unclutter -idle 0 -root &) && printf '\e[32;1m✔\e[0m\n'
}

open_chromium() {
    local chromium_binary
    if command -v chromium-browser >/dev/null 2>&1; then
        chromium_binary=chromium-browser
    elif command -v chromium >/dev/null 2>&1; then
        chromium_binary=chromium
    else
        xmessage -center "Chromium is not installed. Please install it to proceed." &
        exit 1
    fi

    local URL=${1?URL missing} launch_html
    launch_html=$(mktemp --suffix '.html')
    printf '<html><head><title>Redirection to %s</title><meta http-equiv="refresh" content="10; url=%s" /></head><body style="background: black;">Hello World</body></html>' "$URL" "$URL" >"$launch_html"

    local chromium_args=(
        --app="file://$launch_html"
        --autoplay-policy=no-user-gesture-required
        --disable-component-update
        --disable-features='AudioServiceOutOfProcess,TranslateUI'
        --disable-gpu # At least on Raspberry Pi, Zero and Zero 2 the best option
        --disable-pinch
        --disable-session-crashed-bubble
        --enable-features=WebUIDarkMode
        --force-dark-mode
        --kiosk
        --log-level=2 # 0=INFO, 1=WARNING, 2=ERROR, 3=FATAL, see https://stackoverflow.com/questions/46744968/how-to-suppress-console-error-warning-info-messages-when-executing-selenium-pyth
        --noerrdialogs
        --overscroll-history-navigation=0
        --simulate-outdated-no-au='Tue, 31 Dec 2099 23:59:59 GMT'
        --touch-events=enabled
        --v=2 # 0-3, 3 → suppress all other logging, see https://www.chromium.org/for-testers/enable-logging/
    )
    set -x
    "$chromium_binary" "${chromium_args[@]}"
}

finalize_chromium() {
    local visible_wid visible_wname
    printf "Waiting for the Chromium window to become visible...\n"
    while ! visible_wid=$(xdotool search --sync --onlyvisible --class chromium 2>/dev/null); do
        sleep 1
    done
    visible_wname=$(xdotool getwindowname "$visible_wid")
    printf 'Successfully waited for the Chromium window \e[3m%s\e[23m (name: \e[3m%s\e[23m) to become visible \e[32;1m✔\e[0m\n' "$visible_wid" "$visible_wname"

    printf "Enumerating all Chromium windows...\n"
    while read -r wid; do
        printf 'Found Chromium window %s: ' "$wid"
        xdotool getwindowname "$wid"
    done < <(xdotool search --class chromium)

    printf "Waiting for Chromium window %s to update its title... " "$visible_wid"
    local current_wname
    while true; do
        current_wname="$(xdotool getwindowname "$visible_wid")"
        [ "$visible_wname" = "$current_wname" ] || break
        printf '\nwaiting... '
        sleep 1
    done
    printf '\e[3m%s\e[23m \e[32;1m✔\e[0m\n' "$current_wname"

    printf "Activating Chromium window %s... " "$visible_wid"
    xdotool windowactivate "$visible_wid" && printf '\e[32;1m✔\e[0m\n'

    printf "Sending F11 key to switch Chromium window %s to full-screen mode... " "$visible_wid"
    xdotool key F11 && printf '\e[32;1m✔\e[0m\n'
}

export DISPLAY=:0

tweak_ui >>"$LOG_FILE" 2>&1
open_chromium "${BUSYSCREEN_KIOSK_URL:-http://localhost/}" >>"$LOG_FILE" 2>&1 &
finalize_chromium >>"$LOG_FILE" 2>&1 &
exec matchbox-window-manager -use_titlebar no
